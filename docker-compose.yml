services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: talkify
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      #Zookeeper single-node mode
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talkify-backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: talkify
      DB_SSL_MODE: disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: talkify-messages
      JWT_SECRET: 5fgxydJuRrIc2XsiHuSyw8PpTjrgM7DuMnKf2PceiASuSZn251
      SERVER_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: "no"

volumes:
  pgdata:
